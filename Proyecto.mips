# Universidad Simón Bolívar
# Asignatura: Organización del Computador
# proyecto 1  2/12/2022
# Alumnos: Miguel Angel Arturo Gordillo Arismendi  18-10807
#          Jesús David Cuellar                     15-10345
#
# La idea de la implementaciòn se encuentra en el informe del proyecto
#

.data 

string:     .space 400
auxiliar:   .asciiz "                    " # arreglo que contendra los 20 caracteres
estrellita: .byte '*'
espacio:    .byte ' '
salto:      .asciiz "\n"

charA:      .byte 'A'        # Letras que me permitiran saber a que funcion ir
chara:      .byte 'a'
charB:      .byte 'B'
charb:      .byte 'b'
charC:      .byte 'C'
charc:      .byte 'c'

.text

#introduzco caracteres estrellita y espacio
lb $t5 estrellita
lb $t6 espacio

# introduzco el string
li $v0 8
la $a0 string
li $a1 400
syscall
move $a3 $a0 # Lo guardo en $a3

# introduzco el arreglo auxiliar
la $a2 auxiliar

# Recorro el arreglo y voy guardando en un arreglo auxiliar
strlen:
    li $t0, 0 # initialize the count to zero
    # introduzco el arreglo auxiliar para cuando ya este dentro del loop
    la $a2 auxiliar
    # Primer loop 
    Firstloop:
        lb $t1, 0($a3) # load the next character into t1
	beqz $t1 siguiente # check for the null character
	addi $a3, $a3, 1 # increment the string pointer
	addi $t0, $t0, 1 # increment the count
	
	# voy cargando el arreglo auxiliar
	sb $t1 0($a2)
	addi $a2, $a2, 1 # increment the auxiliar pointer	
	
	# if si el contador es igual a 20, ya tengo el maximo de caracteres que pueden haber en una linea
	beq $t0 20 siguiente

	j Firstloop 
	# Esta etiqueta es cuando voy a imprimir el siguiente lote de caracteres en la siguiente linea
	vuelta:	
	    li $v0 4
	    la $a0 salto   # Realizo un salto de linea
	    syscall
	    beqz $t1 finish  # si $t1 es null termino el programa
	    j strlen # return to the top of the loop
 
# Siguiente loop que imprimira linea por linea cada letra del arreglo auxiliar   	    	 
siguiente:    
    
    li $t2 0 #inicializo en contador para hacer las lineas respectivas 
    j Secondloop
    SiguienteLineaLetra:
        li $v0 4
	la $a0 salto  # cargo el salto de linea ya que llegue al final de una linea
	syscall
        addi $t2 $t2 1    # Realizo la siguiente linea, en cuya caso si es igual a 5, significa que ya imprimira todas las
        beq  $t2 5 vuelta # lineas de los caracteres en el arreglo auxiliar
    # Segundo loop  
    Secondloop:              
        li $t3 0 #inicializo el contador de los caracteres del arreglo auxiliar
        sub  $a2 $a2 $t0 # vuelvo a poner el apuntador en el inicio del arreglo auxiliar     
        
        # Tercer loop el cual recorrera letra por letra del arreglo auxiliar
        Thirdloop:                                
             
             beq $t3 $t0 SiguienteLineaLetra # si ambos contadores son iguales, voy a la linea siguiente de las letras          
             
             lb $t4, 0($a2) # load the next character of auxiliar array into t4          
             
             lb $t7 charA   # Si el caracter es igual a la letra A voy a la funcion que imprime la linea A
             beq $t4 $t7 A
             lb $t7 chara   # Si el caracter es igual a la letra a voy a la funcion que imprime la linea de A
             beq $t4 $t7 A
             
             lb $t7 charB   # lo mismo para B
             beq $t4 $t7 B
             lb $t7 charb   # lo mismo para b
             beq $t4 $t7 B
             
             beq $t4 $t6 Nada # Si el caracter es igual a espacio, voy a la funcion Nada, que me imprime la linea del espacio
                                     
             
             
             # Aqui escribes los demas casos jesus, y borras este comentario
             
             
             
             
             
             next: # paso al siguiente caracter                
	         addi $a2, $a2, 1 # increment the auxiliar pointer
	         addi $t3, $t3, 1 # increment the count of chars    
                 j Thirdloop
                        

# Funcion que imprime las lineas correspondientes a A
A:
# Si el contador de las lineas es igual 0,1,2,3 o 4, voy a la correspondiente linea para ser impresa
beq $t2 $zero primeralineA
beq $t2 1     segundalineaA    
beq $t2 2     terceralineaA    
beq $t2 3     segundalineaA
beq $t2 4     segundalineaA  # Ya que la linea 4 y 5 son iguales a la segunda linea de A    
    
    primeralineA:    
    li $v0 11
    la $a0 ($t6)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall
    
    j next

        
    segundalineaA:
    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall
    
    li $v0 11
    la $a0 ($t6)
    syscall
    
    j next
  
 
    terceralineaA:    
    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall
    
    j next

# Funcion que imprime las lineas correspondientes a A
B:

beq $t2 $zero primeralineaB
beq $t2 1     segundalineaB
beq $t2 2     primeralineaB 
beq $t2 3     segundalineaB
beq $t2 4     primeralineaB                   
      
    primeralineaB:    
    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall
    
    li $v0 11
    la $a0 ($t6)
    syscall
    
    j next


    segundalineaB:

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall

    li $v0 11
    la $a0 ($t5)
    syscall

    li $v0 11
    la $a0 ($t6)
    syscall
    
    j next

# Funcion que imprime las lineas correspondientes a espacio
Nada:
    li $v0 11
    la $a0 ($t6)
    syscall
    
    li $v0 11
    la $a0 ($t6)
    syscall
    
    li $v0 11
    la $a0 ($t6)
    syscall
    
    li $v0 11
    la $a0 ($t6)
    syscall
    
    li $v0 11
    la $a0 ($t6)
    syscall
    
    li $v0 11
    la $a0 ($t6)
    syscall
    
    j next

# Aqui escribes las demas funciones jesus, y borras este comentario












# Termina el programa
finish:

